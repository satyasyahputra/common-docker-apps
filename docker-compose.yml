version: '3'
services:
  postgredb:
    image: postgres
    container_name: pgdb
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-postgres}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-satya}
      POSTGRES_USER: ${KONG_PG_USER:-satya}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-satya}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    volumes:
      - my-data:/var/lib/postgresql/data/ 
  mongodb:
    image: mongo
    container_name: mongodb
    volumes:
      - my-data:/data/db
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/konga --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 27017:27017
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
      - 61613:61613
    volumes:
      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
  elastic-node-01:
    image: elasticsearch:7.10.1
    container_name: elastic-node-01
    environment:
      - node.name=es01
      - discovery.type=single-node
      # - cluster.name=es-docker-cluster
      # - discovery.seed_hosts=es02
      # - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./.docker/elastic/node-01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  # springboot-apps:
  #   image: synctek/account:0.1
  #   container_name: account
  #   ports: 
  #     - 8801:8801
  #   depends_on: 
  #     - postgredb
volumes:
  my-data: 